rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Basic rules
    match /{document=**} {
      allow read, write: if false; // Default deny all
    }
    
    // User profile rules
    match /users/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if request.auth != null && request.auth.uid == userId 
                    && !request.resource.data.diff(resource.data).affectedKeys()
                      .hasAny(['role', 'admin', 'isAdmin']);
      
      // User preferences subcollection
      match /preferences/{docId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
      
      // Saved cars subcollection
      match /savedCars/{carId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
      
      // Security subcollection (password history, etc.)
      match /security/{docId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
      
      // Login history (read-only for user, create-only from server or valid auth)
      match /loginHistory/{historyId} {
        allow read: if request.auth != null && request.auth.uid == userId;
        allow create: if request.auth != null && 
                      (request.auth.uid == userId || request.auth.token.admin == true);
      }
    }
    
    // Public data
    match /models/{modelId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.token.admin == true;
    }
    
    // Admin only collections
    match /admin/{document=**} {
      allow read, write: if request.auth != null && request.auth.token.admin == true;
    }
  }
} 